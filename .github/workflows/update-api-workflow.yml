name: Push to Dockerhub and Update EC2 Container
on:
  push:
    branches:
      - main

jobs:
  pushToDockerhub:
    # Add this line to run the job depending on a tag in your commit message.
    if: contains(github.event.head_commit.message, 'push-image')
    runs-on: ubuntu-latest
    # environment: 
    #   name: devcontainer-workflow-env
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Environment Variables and Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > $GITHUB_WORKSPACE/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_WORKSPACE/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_WORKSPACE/.env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> $GITHUB_WORKSPACE/.env
          echo "POSTGRES_SERVICE_IP=${{ secrets.POSTGRES_SERVICE_IP }}" >> $GITHUB_WORKSPACE/.env
          echo "DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_WORKSPACE/.env
          echo "DATA_URL=${{ secrets.DATA_URL }}" >> $GITHUB_WORKSPACE/.env
          # Add more lines if necessary

      - name: Log in to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api-abnb:latest

  updateEC2Container:
    if: contains(github.event.head_commit.message, 'push-image')
    needs: pushToDockerhub
    runs-on: ubuntu-latest
    # environment: 
    #   name: devcontainer-workflow-env
    steps:
      - name: Execute remote SSH commands to update Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd api &&
            sudo docker-compose stop api-abnb &&
            sudo docker-compose rm -f api-abnb &&
            sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/api-abnb &&
            sudo docker-compose up -d api-abnb
